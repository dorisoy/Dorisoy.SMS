# Copyright Xeno Innovations, Inc.
#
# EditorConfig (http://EditorConfig.org)
# This file provides formatting rules for the project so you can
# keep your own personal defaults for others
#
# Revision Log
# 4a  2021-01-17 - C# StyleCop rules
# 4   2020-05-10 - C# coding standards
# 3c  2020-04-18 - Split file filters into their own sections
# 3b  2019-03-24 - Included additional rules
# 3   2017-07-31 - Basic
#
# References:
#   - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options
#   - https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019
#   - https://github.com/microsoft/microsoft-ui-xaml/blob/master/.editorconfig
#

# Top-most EditorConfig file
root = true

# All generic files should use MSDOS style endings, not Unix (lf)
[*]
end_of_line = crlf

# C# Files
[*.{cs,csx}]
indent_style = space
indent_size = 2
tab_width = 2
trim_trailing_whitespace = true

# C# Coding Conventions

## Switch case statements
csharp_indent_switch_labels = true
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true

## Formatting - new line options
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
### Require braces to be on a new line for (also known as "Allman" style)
csharp_new_line_before_open_brace = accessors, methods, object_collection, control_blocks, types, properties, lambdas

## Spaces
csharp_space_after_cast = false
## #require a space before the colon for bases or interfaces in a type declaration
## csharp_space_after_colon_in_inheritance_clause = true
## #require a space after a keyword in a control flow statement such as a for loop
## csharp_space_after_keywords_in_control_flow_statements = true
## #require a space before the colon for bases or interfaces in a type declaration
## csharp_space_before_colon_in_inheritance_clause = true
## #remove space within empty argument list parentheses
## csharp_space_between_method_call_empty_parameter_list_parentheses = false
## #remove space between method call name and opening parenthesis
## csharp_space_between_method_call_name_and_opening_parenthesis = false
## #do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
## csharp_space_between_method_call_parameter_list_parentheses = false
## #remove space within empty parameter list parentheses for a method declaration
## csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
## #place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
## csharp_space_between_method_declaration_parameter_list_parentheses = false

dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

## Naming Conventions

### Alt to LicenseHeader extension
# file_header_template = Copyright Xeno Innovations, Inc. 2020

### Async methods should have "Async" suffix
dotnet_naming_rule.async_methods_end_in_async.symbols = any_async_methods
dotnet_naming_rule.async_methods_end_in_async.style = end_in_async
dotnet_naming_rule.async_methods_end_in_async.severity = error
# dotnet_naming_rule.async_methods_end_in_async.severity = suggestion

dotnet_naming_symbols.any_async_methods.applicable_kinds = method
dotnet_naming_symbols.any_async_methods.applicable_accessibilities = *
dotnet_naming_symbols.any_async_methods.required_modifiers = async

dotnet_naming_style.end_in_async.capitalization = pascal_case
dotnet_naming_style.end_in_async.required_prefix =
dotnet_naming_style.end_in_async.required_suffix = Async
dotnet_naming_style.end_in_async.word_separator =

### Interfaces
dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =

# StyleCop.Analyzers
## CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = silent

[*.{c,cpp,h}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[*.sql]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[*.{xml,xaml,axml}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[*.json]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[*.sln]
indent_size = 2

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

# PList Files
[*.plist]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

# YAML files
[*.{yaml,yml}]
indent_style = space
indent_size = 2
trim_trailing_whitespace = true
